version: 2.1

orbs: 
  slack: circleci/slack@4.10.1

jobs:
#Job to build the front-end of the application.
  build-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Build front-end
          command: |
            cd frontend
            npm install
            npm run build
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build


#Job to build the backend
  build-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Back-end build
          command: |
            cd backend
            npm install
            npm run build
            exit 1
      #Integrate slack failure notification
      - slack/notify:
          channel: pipeline-alerts
          mentions: '@here'
          event: fail
          template: basic_fail_1
      - slack/notify:
          channel: pipeline-alerts
          event: pass
          template: basic_success_1
      - save_cache:
          paths: [backend/node_modules]
          key: backend-build
  
  #Run unit tests on frontend
  test-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Unit tests frontend
          command: |
            cd frontend
            npm install
            npm run test
      
 #Run unit tests on backend               
  test-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Unit tests backend
          command: |
            cd backend
            npm install
            npm run test
  
#Scan frontend for vulnerabilities
  scan-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Code analysis frontend
          command: |
            cd frontend
            npm install
            #npm install oauth-sign@^0.9.0
            #fix vulnerabilities
            npm audit fix --audit-level=critical --force
            npm audit fix --force
            npm audit --audit-level=critical

#Scan backend for vulnerabilities
  scan-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
    - checkout
    - restore_cache:
        keys: [backend-build]
    - run:
        name: Code analysis backend
        command: |
          cd backend
          npm install
          #npm install oauth-sign@^0.9.0
          #fix vulnerabilities
          npm audit fix --audit-level=critical --force
          npm audit fix --force
          npm audit --audit-level=critical


#Workflows for jobs to run
workflows:
  my_workflows:
    jobs:
      - build-frontend
      - build-backend:
          context: SlackContext
      - test-frontend:
          requires:
            - build-frontend
      - test-backend:
          requires:
            - build-backend
      - scan-frontend:
          requires:
            - build-frontend
      - scan-backend:
          requires:
            - build-backend